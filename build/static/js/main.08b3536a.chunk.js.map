{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/Shipment.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","sample-burgers.js","components/Burger.js","base.js","components/Auth/Login.js","components/Auth/SingIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","display","toggleDisplay","setTitle","setUrl","className","onClick","map","restaurant","getTitle","key","history","push","Header","Shipment","total","this","delivery","deliveryNeon","Component","Order","renderOrder","burger","burgers","count","order","isAvailable","status","transitionOption","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","deleteBurgerFromOrder","orderIds","Object","keys","reduce","prevTotal","AddBurgerFrom","nameRef","React","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","current","value","parseFloat","desc","image","addBurger","currentTarget","reset","action","onSubmit","ref","type","placeholder","autoComplete","propType","PropTypes","func","EditBurgerForm","handleChange","updatedBurger","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","console","log","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handeLogout","AddBurgerForm","loadSampleBurgers","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","Burger","datalist","addToOrder","disabled","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SingIn","authProvider","signInWithPopup","then","children","App","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.08b3536a.chunk.js","sourcesContent":["// Наши рестораны\nconst restaurants = [\n  {\n    title: 'Hot Burger Khreshchatyk',\n    url: 'hot-burger-khreschatyk',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Obolon',\n    url: 'hot-burger-obolon',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Maydan',\n    url: 'hot-burger-maydan',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React, {useState} from \"react\";\nimport restaurants from \"../sample-restaurants\";\nimport PropTypes from 'prop-types'\n\n\n\nconst Landing = props => {\n\n        // state = {\n        //     display: false,\n        //     title: '',\n        //     url: '',\n    const [display, toggleDisplay ] = useState(false)\n    const [title,setTitle ] = useState('')\n    const [url ,setUrl ] = useState('')\n\n    const displayList = () => {\n        toggleDisplay(!display)\n     };\n     \n     const getTitle = restaurant => {\n         const {title, url} = restaurant\n         toggleDisplay(!display)\n         setTitle(title)\n         setUrl(url)\n     };\n     \n     const goToRestaurant = () => {\n          \n          props.history.push(`/restaurant/${url}`)\n         }\n     \n    return (\n        <div className='restaurant_select'>\n            <div className='restaurant_select_top'>\n                <div onClick={displayList} className='restaurant_select_top-header font-effect-outline'>\n                    {title ? title : 'Select Restaurant'}\n                </div>\n                <div className='arrow_picker'>\n                    <div className='arrow_picker-top'></div>\n                    <div className='arrow_picker-down'></div>\n                </div>\n            </div>\n            {display ?<div className='restaurant_select_bottom'>\n                <ul>\n                    {restaurants.map(restaurant => {\n                        return <li\n                            onClick={() => getTitle(restaurant)}\n                            key={restaurant.id}>{restaurant.title}</li>\n                    })}\n                </ul>\n            </div> : null}\n            {title && !display ? (<button onClick={goToRestaurant}>Go to the restaurant</button>) : null}\n        </div>\n    );\n}\nLanding.propTypes = {\n    history: PropTypes.object\n}\n\n\nexport default Landing\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nconst Header = props => (\n            <header className='top'>\n                <div className=\"wrap\">\n                    <div className=\"header-content\">\n                        <div className=\"header-rating\">\n                            <div className=\"header-rating_tag\">Rating</div>\n                            <div className=\"header-rating_icon\">★★★★★</div>\n                        </div>\n                        <div className=\"header-divider\"></div>\n                        <h1 className=\"font-effect-fire-animation\">{props.title}</h1>\n                        <h3>\n                          <span>\n                              Fast Delyvery\n                              <span className='sub-header'>#burgers</span>\n                          </span>\n                        </h3>\n                    </div>\n                </div>\n\n            </header>\n)\n\nHeader.propTypes = {\n    title: PropTypes.string\n}\nexport default Header;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\n\nclass Shipment extends Component {\n    static propTypes = {\n        total: PropTypes.number,\n\n    }\n\n    render() {\n        const {total} = this.props;\n        const delivery = total > 0 && total < 25 ? 5 : 1;\n        const deliveryNeon = delivery === 1 ?(\n            <span className='font-effect-neon total_wrap-cheap'>\n                {delivery} $\n            </span>\n        ) : ( <span> {delivery} $</span>);\n        return (\n            <div className='total'>\n                <div className=\"total_wrap\">\n                    <div>\n                        <div> Delivery: {total > 0 ? deliveryNeon : null} </div>\n                        <div className='total_wrap-free'>\n                            {total < 500 ? `Order an extra ${25-total}$ for delivery for 1$` : null}\n                        </div>\n                    </div>\n                    <div className=\"total_wrap-final\">Totall: {total}</div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Shipment;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport Shipment from \"./Shipment\";\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\nclass Order extends Component {\n    static propTypes = {\n        burgers: PropTypes.object,\n        order: PropTypes.object,\n        deleteBurgerFromOrder: PropTypes.func,\n        addBurger: PropTypes.func,\n        loadSampleBurgers: PropTypes.func,\n    }\n\n\n    renderOrder = (key) => {\n        const burger = this.props.burgers[key];\n        const count = this.props.order[key];\n        const isAvailable = burger && burger.status === 'available'\n        const transitionOption = {\n            classNames: 'order',\n                key,\n                timeout: {enter:500, exit:500 },\n        }\n\n        if (!burger) {\n            return null\n        }\n        if(!isAvailable) {\n            return (\n            <CSSTransition\n               {...transitionOption}\n            >\n                <li className='unavailable' key={key}>\n                    Sorry, but {burger ? burger.name : \"burger\"} temporarily not available!\n                </li>\n            </CSSTransition>\n            )\n        }\n        return (\n            <CSSTransition \n            {...transitionOption}\n              >\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component='span' className='count'>\n                            <CSSTransition \n                            classNames='count' \n                            key={count} \n                            timeout={{enter:500, exit:500 }}\n                            >\n                                <span>\n                                    {count}\n                                </span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                         <span> ' {burger.name}</span>\n                        <span> {count * burger.price}$</span>\n                        <button \n                            onClick={() => this.props.deleteBurgerFromOrder(key)}\n                            className='cancellItem'> &times;\n                        </button>\n                    </span>\n                </li>\n            </CSSTransition>\n            )\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const burger = this.props.burgers[key];\n            const count = this.props.order[key];\n            const isAvailable = burger && burger.status === 'available'\n            if(isAvailable) {\n                return prevTotal + burger.price * count\n            }\n            return prevTotal\n        }, 0)\n\n\n        return (\n            <div className='order-wrap'>\n                <h2>Your Order</h2>\n                <TransitionGroup component='ul' className='order'>\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                {total > 0 ? (\n                    <Shipment total={total} />\n                ) : <div className=\"nothingSelected\">\n                    Chose burgers and add to order\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Order;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nclass AddBurgerFrom extends Component {\n    static propType = {\n        addBurger: PropTypes.func\n    }\n\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n\n    createBurger= event => {\n        event.preventDefault()\n        const burger = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value || 0),\n            status: this.statusRef.current.value,\n            desc: this.statusRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addBurger(burger)\n        event.currentTarget.reset()\n\n    }\n\n    render() {\n        return (\n            <form action=\"\" className=\"burger-edit\" onSubmit={this.createBurger}>\n                <input ref={this.nameRef} name='name' type='text' placeholder='Name' autoComplete='off' />\n                <input ref={this.priceRef} name='price' type='text' placeholder='Price' autoComplete='off' />\n                <select ref={this.statusRef} name='status' className='status'>\n                    <option value=\"available\">Is Available</option>\n                    <option value=\"unavailable\">Delete from menu</option>\n                </select>\n                <textarea ref={this.descRef} name='desc' type='text' placeholder='Description' />\n                <input ref={this.imageRef} name='image' type='text' placeholder='Image' autoComplete='off' />\n                <button type='submit'>Add to Menu</button>\n            </form>\n        );\n    }\n}\n\nexport default AddBurgerFrom;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\n\nclass EditBurgerForm extends React.Component {\n    static propTypes = {\n        burger: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            price: PropTypes.number,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n        }),\n        index: PropTypes.string,\n        updateBurger: PropTypes.func,\n        deleteBurger: PropTypes.func      \n    }\n\n    handleChange = event => {       \n        const updatedBurger = {\n            ...this.props.burger, \n            [event.currentTarget.name]: \n            event.currentTarget.name === 'price'\n            ? parseFloat(event.currentTarget.value) || 0\n            : event.currentTarget.value\n        }\n       this.props.updateBurger(this.props.index, updatedBurger)\n    }\n    render() {\n        return (\n            <div className='burger-edit'>\n                <input \n                    onChange={this.handleChange} name='name' type='text'  \n                    value={this.props.burger.name}\n                 /> \n                <input \n                    onChange={this.handleChange} name='price' \n                    type='text' value={this.props.burger.price }\n                />\n                <select \n                    onChange={this.handleChange}\n                    name='status' \n                    className='status' \n                    value={this.props.burger.status} \n                    >\n                        <option value='available'>Доступно </option>\n                        <option value='unavailable'>Не доступно </option>\n                </select>\n                <textarea \n                    onChange={this.handleChange} name='desc' \n                    value={this.props.burger.desc }\n                />\n                <input \n                    onChange={this.handleChange} \n                    name='image' type='text' \n                    value={this.props.burger.image}\n                />\n                <button\n                onClick={() => this.props.deleteBurger(this.props.index)}\n                >Delete burger</button>\n            </div>\n        )\n    }\n}\n\nexport default EditBurgerForm ","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport AddBurgerForm from \"./AddBurgerForm\";\nimport EditBurgerForm from './EditBurgerForm';\nimport firebase from 'firebase/app'\n\n\nclass MenuAdmin extends Component {\n    state ={\n        photo: \"\",\n        user: ''\n    }\n    static propTypes = {\n        burgers: PropTypes.object,\n        deleteBurger: PropTypes.func,\n        updateBurger: PropTypes.func,\n        addBurger: PropTypes.func,\n        loadSampleBurgers: PropTypes.func,\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({user})\n            }\n        })\n    }\n    authHandler = async(authData) => {\n        console.log(authData)\n        const {email, photoURL} = authData.user;\n        this.setState({user: email, photo: photoURL})\n    }\n\n    render() {\n        const {user, photo } = this.state;\n        const avatar = photo ? photo : '/images/avatar.png'\n        return (\n            \n           <div className='menu-admin'>\n              {user ? \n                (<div className='login-header'>\n                    <div className='avatar'>\n                        <img src={avatar} alt={user} />\n                    </div>\n                    <button \n                    className='buttonLogout'\n                    onClick={this.props.handeLogout}\n                    >\n                        Logout\n                    </button>\n            </div>\n            ) : null}\n                <h2>Control Menu Options </h2>\n                {Object.keys(this.props.burgers).map(key=> {\n                    return <EditBurgerForm \n                    key={key} \n                    index={key}\n                    deleteBurger={this.props.deleteBurger}\n                    burger={this.props.burgers[key]} \n                    updateBurger={this.props.updateBurger}\n                    />;\n                })}\n                     \n                <AddBurgerForm addBurger={this.props.addBurger}/>\n                <button onClick={this.props.loadSampleBurgers}>Add Burgers</button>\n            </div>\n        );\n    }\n}\n\nexport default MenuAdmin;\n","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: 'Cheeseburger',\n    image: '/images/cheese.jpg',\n    desc:\n      'Classic 100% beef steak burger with pickled cucumbers and fresh wheat bun.',\n    price: 3,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Chickenburger',\n    image: '/images/chicken.jpg',\n    desc:\n      'Chicken burger with melted cheese, BBQ sauce and lettuce.',\n    price: 4,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Double Hamburger',\n    image: '/images/double.jpg',\n    desc:\n      'Double hamburger with 100% beef steak and melted Cheddar cheese and spicy sauce.',\n    price: 7,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Fishburger',\n    image: '/images/fish.jpg',\n    desc:\n      'Top quality fish fillet with lettuce, pickled cucumbers and light mayonnaise.',\n    price: 3,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'French fries',\n    image: '/images/fries.jpg',\n    desc:\n      'Super Fries Crispy Golden Hot Potato Slices, Made from Selected Organic Root Vegetables!',\n    price: 1,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Burger',\n    image: '/images/ham.jpg',\n    desc:\n      'Burger made from 100% selected beef, with fried bacon slices and fresh melted cheese, dressed with ketchup and mayonnaise.',\n    price: 10,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Mega Burger',\n    image: '/images/mega.jpg',\n    desc:\n      'Our largest burger ever made with the freshest steak, melted Cheddar cheese and pickles.',\n    price: 12,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Burger in Pete',\n    image: '/images/pita.jpg',\n    desc:\n      'Four 100% beef patties topped with melted Cheddar cheese with fresh lettuce in a fresh wheat tortilla.',\n    price: 8,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Chips',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'A serving of fresh potato slices baked outdoors under peaceful embers',\n    price: 1.5,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import React, {Component} from 'react';\nimport sampleBurgers from \"../sample-burgers\";\nimport Proptypes from 'prop-types'\n\nclass Burger extends Component {\n    static propTypes = {\n        details: Proptypes.shape({\n            image: Proptypes.string,\n            name: Proptypes.string,\n            price: Proptypes.number,\n            desc: Proptypes.string,\n            status: Proptypes.string,\n        }),\n        index: Proptypes.string,\n        addToOrder: Proptypes.func\n    }\n\n    render() {\n        const { image, name, price, desc, status } = this.props.datalist;\n        const isAvailable = status === 'available'\n\n        return (\n           <li className='menu-burger'>\n               <div className='image-container'>\n                   <img src={image} alt={name}/>\n               </div>\n               <div className=\"burger-details\">\n                   <h3 className='burger-name'>{name}\n                   <span className=\"price\">\t{price}&#36;</span>\n                   </h3>\n                   <p>{desc}</p>\n                   <button\n                       onClick={() => this.props.addToOrder(this.props.index)}\n                       className=\"buttonOrder\"\n                       disabled={!isAvailable}\n                   >{isAvailable ? 'Order' : 'temporarily not available'}</button>\n               </div>\n           </li>\n        );\n    }\n}\n\nexport default Burger;\n","import Rebase from 're-base'\nimport firebase from \"firebase/app\";\nimport 'firebase/database'\nimport 'firebase/auth'\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyD_dh3XPUvDdjD23XjMSRAlhYPk5dOFQVs\",\n    authDomain: \"hot-burgers-6d1b0.firebaseapp.com\",\n    databaseURL: \"https://hot-burgers-6d1b0-default-rtdb.europe-west1.firebasedatabase.app\",\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport {firebaseApp};\nexport default base;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nconst Login = props => {\n    return (\n        <div className='login-container'>\n            <nav className='login'></nav>\n            <h2>Authorization</h2>\n            <p>Enter your login and Password from your GitHub</p>\n            <button className='github'\n            onClick={()=>props.authenticate()}\n            >\n                Login\n            </button>\n        </div>\n    )\n}\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport Login from './Login';\nimport firebase from \"firebase/app\";\nimport {firebaseApp} from '../../base';\n// import { render } from \"stylus\";\n\n\nclass SingIn extends React.Component {\n    state = {\n        user: ''\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({user})\n            }\n        })\n    }\n    authHandler = async(authData) => {\n        console.log(authData)\n        const {email} = authData.user;\n        this.setState({user: email})\n    }\n\n  \n\n    authenticate = () => {\n        const authProvider = new firebase.auth['GithubAuthProvider']();\n        firebaseApp\n        .auth()\n        .signInWithPopup(authProvider)\n        .then(this.authHandler)\n        \n    }\n    render() {\n        if(!this.state.user){\n            return <Login authenticate={this.authenticate} />\n        }\n        return this.props.children \n    }\n\n}\n\n\nexport default SingIn","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport sampleBurgers from \"../sample-burgers\";\nimport Burger from \"./Burger\";\nimport base from \"../base\";\nimport SingIn from './Auth/SingIn';\nimport firebase from 'firebase/app';\n\nclass App extends Component {\n    static propTypes = {\n        match: PropTypes.object\n    }\n    state = {\n        burgers: {},\n        order: {},\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match\n        const localStorageRef = localStorage.getItem(params.restaurantId)\n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef)})      \n        }        \n\n        this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n            context: this,\n            state: 'burgers'\n        })\n    }\n\n    componentDidUpdate() {\n        const { params } = this.props.match\n        localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n    }\n\n    addBurger = burger => {\n        console.log('addBurger', burger)\n        //1 make new coppy of object\n        const burgers = {...this.state.burgers};\n        // add new burger in property\n        burgers[`bureger${Date.now()}`] = burger;\n        // writw new burger object in state\n        this.setState({burgers})\n    }\n\n    updateBurger = (key, updatedBurger) => {\n        //make coppy obj state\n        const burgers = { ...this.state.burgers};\n        //updade needed burger\n        burgers[key] = updatedBurger;\n        // record new obj burgers in state\n        this.setState({burgers})\n    }\n\n    deleteBurger = (key) => {\n        //1. make a copy of state\n        const burgers = {...this.state.burgers };\n        //2. delete burger \n        burgers[key] = null;\n        this.setState({burgers})\n    }\n\n    deleteBurgerFromOrder = (key) => {\n        const order = {...this.state.order}\n        delete order[key]\n        this.setState({order})\n    }\n\n    loadSampleBurgers = () => {\n        this.setState({burgers: sampleBurgers })\n    }\n\n    addToOrder = (key) => {\n        const order = {...this.state.order}\n        order[key] = order[key] + 1 || 1;\n        this.setState({order})\n    }\n    handeLogout = async() => {\n        await firebase.auth().signOut();\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <SingIn>\n            <div>\n                <div className=\"burger-paradise\">\n                    <div className=\"menu\">\n                        <Header title='Very Hot Burger' />\n                        <ul className=\"burgers\">\n                            {Object.keys(this.state.burgers).map(key => {\n                                return <Burger\n                                    key={key}\n                                    index={key}\n                                    datalist={this.state.burgers[key]}\n                                    addToOrder={this.addToOrder}\n                                /> })}\n                        </ul>\n                    </div>\n                    <Order \n                    deleteBurgerFromOrder = {this.deleteBurgerFromOrder}\n                    burgers={this.state.burgers} order={this.state.order}\n                    />\n                    <MenuAdmin\n                        addBurger={this.addBurger}\n                        loadSampleBurgers={this.loadSampleBurgers}\n                        burgers={this.state.burgers}\n                        updateBurger= {this.updateBurger}\n                        deleteBurger={this.deleteBurger}\n                        handeLogout={this.handeLogout}\n                    />\n                </div>\n            </div>\n            </SingIn>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h2>The Page is Not Found</h2>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Landing from \"./Landing\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/' component={Landing} />\n                <Route path='/restaurant/:restaurantId' component={App} />\n                <Route  component={NotFound} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Router\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport Landing from './components/Landing'\nimport './css/style.css'\nimport App from \"./components/App\";\nimport Router from \"./components/Router\";\n\n\nrender(<Router />, document.querySelector('#root'))\n"],"sourceRoot":""}